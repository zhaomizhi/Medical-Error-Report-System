/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterfaces.Service;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.NetWork.Network;
import Business.Organization.Organization;
import Business.Organization.SecretaryOrganization;
import Business.Organization.ServiceOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ServicerReport;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aki
 */
public class ServiceCenterWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ServiceCenterWorkAreaJPanel
     */
    Enterprise enterprise;
    JPanel container;
    EcoSystem ecoSystem;
    ServiceOrganization serviceOrganization;
    EcoSystem ecoSystem1;
    UserAccount ua;
   

    public ServiceCenterWorkAreaJPanel(JPanel jPanel, EcoSystem ecoSystem1, Organization organization, Enterprise enterprise, UserAccount ua) {
        initComponents();
        container = jPanel;
        this.enterprise = enterprise;
        ecoSystem = ecoSystem1;
        serviceOrganization = (ServiceOrganization) organization;
        this.ua = ua;
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (WorkRequest wr : serviceOrganization.getWorkQueue().getWorkRequestList()) {
              
            Object[] row = new Object[5];
            row[0] = wr;
           
            row[1] = wr.getStatus();
            row[2] = wr.getLevel2();
            if (wr.getSatisfylevel() != null) {
                row[3] = "Evaluated";
            } else {
                row[3] = "NOT Evaluated";
            }

            
            model.addRow(row);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        reporterjButton1 = new javax.swing.JButton();
        governjButton1 = new javax.swing.JButton();
        refreshjButton1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel3.setText("Report system- Service center Work Area");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Report List:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Report Time", "Status of report", "Category", "Feedback form reporter"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(1);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(1);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(1);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 830, 220));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel4.setText("Note:this name is username, not person name");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, -1, -1));

        reporterjButton1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        reporterjButton1.setText("Respond to Reporter");
        reporterjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reporterjButton1ActionPerformed(evt);
            }
        });
        add(reporterjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 430, -1, 30));

        governjButton1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        governjButton1.setText("Report to Government Department");
        governjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                governjButton1ActionPerformed(evt);
            }
        });
        add(governjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 480, 280, 30));

        refreshjButton1.setText("Refresh");
        refreshjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButton1ActionPerformed(evt);
            }
        });
        add(refreshjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 350, -1, -1));

        jButton1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButton1.setText("Check Report from govenment");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 530, 270, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void reporterjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reporterjButton1ActionPerformed
        // TODO add your handling code here:

        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select one row");
        } else {
            WorkRequest workRequest = (WorkRequest) jTable1.getValueAt(selectedRow, 0);
            //workRequest.setSenderEnterprise(enterprise);
            //workRequest.setStatus("Respond to reporter");

            HandlereportJPanel  ereportJPanel = new HandlereportJPanel(container, workRequest, ecoSystem, enterprise, ua);
            container.add("HandlereportJPanel", ereportJPanel);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
        }
    }//GEN-LAST:event_reporterjButton1ActionPerformed

    private void governjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_governjButton1ActionPerformed
        // TODO add your handling code here:

        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        WorkRequest workRequest = (WorkRequest) jTable1.getValueAt(selectedRow, 0);
        workRequest.setStatus("Sending to Government Department");
        
        if (workRequest.getSatisfylevel() != null) {
            ServicerReport servicerReport = new ServicerReport();
            servicerReport.setSenderEnterprise(workRequest.getSenderEnterprise());
            servicerReport.setLevel1(workRequest.getLevel1());
            servicerReport.setLevel2(workRequest.getLevel2());
            servicerReport.setEpd(workRequest.getEpd());
            servicerReport.setStatus("Sending to Government Department");
            servicerReport.setSatisfylevel(workRequest.getSatisfylevel());
            servicerReport.setLocation(workRequest.getLocation());
            
            servicerReport.setSender(ua);
            servicerReport.setDateoferror(workRequest.getDateoferror());
            if (workRequest.getDoctorreporter() != null) {
                servicerReport.setDoctorreporter(workRequest.getDoctorreporter());
            }

            if (workRequest.getPatientreporter() != null) {
                servicerReport.setPatientreporter(workRequest.getPatientreporter());

            }

            servicerReport.setBloodstage(workRequest.getBloodstage());
            servicerReport.setBloodtyep(workRequest.getBloodtyep());
            
            servicerReport.setSenderEnterprise(workRequest.getSenderEnterprise());
            servicerReport.setSource(workRequest.getSource());
            servicerReport.setReportdate(workRequest.getReportdate());
            
            servicerReport.setDevicecause(workRequest.getDevicecause());
            servicerReport.setDeviceerror(workRequest.getDeviceerror());
            
            servicerReport.setFalldoing(workRequest.getFalldoing());
            servicerReport.setAssisted(workRequest.getAssisted());
            servicerReport.setCauseoffall(workRequest.getCauseoffall());
            
            servicerReport.setMedicationtype(workRequest.getMedicationtype());
            servicerReport.setCharacterizesofme(workRequest.getCharacterizesofme());
            
            servicerReport.setComplication(workRequest.getComplication());
            servicerReport.setSurgeryevent(workRequest.getSurgeryevent());
            servicerReport.setCharaofsurgery(workRequest.getCharaofsurgery());
            
            
            

            for (Network n : ecoSystem.getNetworkList()) {
                for (Enterprise e : n.getEd().getEnterprisesList()) {
                    if (e.getOrgName().equals(workRequest.getSenderEnterprise().getOrgName())) {
                        servicerReport.setSenderNetwork(n);

                    }
                }

            }

            Network network = servicerReport.getSenderNetwork();
            for (Enterprise e : network.getEd().getEnterprisesList()) {
                if (e.getEnterpriseType().equals(Enterprise.EnterpriseType.Government)) {
                    for (Organization org : e.getOrganizationDirectory().getOrganizationList()) {
                        if (org instanceof SecretaryOrganization) {
                            org.getWorkQueue().getWorkRequestList().add(servicerReport);

                        }

                    }

                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Please wait for the feedback from reporter");

        }


    }//GEN-LAST:event_governjButton1ActionPerformed

    private void refreshjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButton1ActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshjButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
            TabbedJPanel reportFromGoJPanel = new TabbedJPanel(container,serviceOrganization);
            container.add("ReportFromGoJPanel", reportFromGoJPanel);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton governjButton1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton refreshjButton1;
    private javax.swing.JButton reporterjButton1;
    // End of variables declaration//GEN-END:variables
}
